{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.initialState = initialState.map((row)=>[\n                ...row\n            ]);\n        this.grid = initialState.map((row)=>[\n                ...row\n            ]);\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    moveLeft() {\n        if (this.status !== \"playing\") return;\n        const prevState = JSON.stringify(this.grid);\n        this.grid = this.grid.map((row)=>this._slideAndMerge(row));\n        this._postMoveHandler(prevState);\n    }\n    moveRight() {\n        if (this.status !== \"playing\") return;\n        const prevState = JSON.stringify(this.grid);\n        this.grid = this.grid.map((row)=>this._slideRight(row));\n        this.grid = this.grid.map((row)=>this._mergeRight(row));\n        this._postMoveHandler(prevState);\n    }\n    _slideRight(row) {\n        const filtered = row.filter((cell)=>cell !== 0);\n        const merged = new Array(4).fill(0);\n        let emptyIndex = 3;\n        for(let i = filtered.length - 1; i >= 0; i--)merged[emptyIndex--] = filtered[i];\n        return merged;\n    }\n    _mergeRight(row) {\n        const merged = row.slice();\n        for(let i = 3; i > 0; i--)if (merged[i] === merged[i - 1] && merged[i] !== 0) {\n            merged[i] *= 2;\n            this.score += merged[i];\n            merged[i - 1] = 0;\n        }\n        return this._slideRight(merged);\n    }\n    moveUp() {\n        if (this.status !== \"playing\") return;\n        const prevState = JSON.stringify(this.grid);\n        this._transposeGrid();\n        this.grid = this.grid.map((row)=>this._slideAndMerge(row));\n        this._transposeGrid();\n        this._postMoveHandler(prevState);\n    }\n    moveDown() {\n        if (this.status !== \"playing\") return;\n        const prevState = JSON.stringify(this.grid);\n        this._transposeGrid();\n        this.grid = this.grid.map((row)=>this._slideAndMerge(row.reverse()).reverse());\n        this._transposeGrid();\n        this._postMoveHandler(prevState);\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.grid;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        if (this.status !== \"idle\") return;\n        this.status = \"playing\";\n        this._addRandomCell();\n        this._addRandomCell();\n    }\n    restart() {\n        this.score = 0;\n        this.grid = this.initialState.map((row)=>[\n                ...row\n            ]);\n        this.status = \"idle\";\n    }\n    _slideAndMerge(row) {\n        const filtered = row.filter((cell)=>cell !== 0);\n        const merged = [];\n        let skipNext = false;\n        for(let i = 0; i < filtered.length; i++){\n            if (skipNext) {\n                skipNext = false;\n                continue;\n            }\n            if (filtered[i] === filtered[i + 1]) {\n                merged.push(filtered[i] * 2);\n                this.score += filtered[i] * 2;\n                skipNext = true;\n            } else merged.push(filtered[i]);\n        }\n        while(merged.length < 4)merged.push(0);\n        return merged;\n    }\n    _transposeGrid() {\n        this.grid = this.grid[0].map((_, colIndex)=>this.grid.map((row)=>row[colIndex]));\n    }\n    _addRandomCell() {\n        const emptyCells = [];\n        for(let row = 0; row < this.grid.length; row++){\n            for(let col = 0; col < this.grid[row].length; col++)if (this.grid[row][col] === 0) emptyCells.push({\n                row: row,\n                col: col\n            });\n        }\n        if (emptyCells.length > 0) {\n            const randomIndex = Math.floor(Math.random() * emptyCells.length);\n            const { row: row, col: col } = emptyCells[randomIndex];\n            this.grid[row][col] = Math.random() < 0.9 ? 2 : 4;\n        }\n    }\n    _postMoveHandler(prevState) {\n        if (JSON.stringify(this.grid) !== prevState) {\n            this._addRandomCell();\n            if (this._checkWin()) this.status = \"win\";\n            else if (!this._hasAvailableMoves()) this.status = \"lose\";\n        }\n    }\n    _checkWin() {\n        return this.grid.some((row)=>row.some((cell)=>cell === 2048));\n    }\n    _hasAvailableMoves() {\n        for(let r = 0; r < 4; r++)for(let c = 0; c < 4; c++){\n            if (this.grid[r][c] === 0) return true;\n            if (c < 3 && this.grid[r][c] === this.grid[r][c + 1]) return true;\n            if (r < 3 && this.grid[r][c] === this.grid[r + 1][c]) return true;\n        }\n        return false;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$scoreElement = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$messageStart = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$messageWin = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$messageLose = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$fieldCells = document.querySelectorAll(\".field-cell\");\nconst $09e991522ca7e64e$var$KEY_LEFT = \"ArrowLeft\";\nconst $09e991522ca7e64e$var$KEY_RIGHT = \"ArrowRight\";\nconst $09e991522ca7e64e$var$KEY_UP = \"ArrowUp\";\nconst $09e991522ca7e64e$var$KEY_DOWN = \"ArrowDown\";\nfunction $09e991522ca7e64e$var$renderGrid() {\n    const grid = $09e991522ca7e64e$var$game.getState();\n    $09e991522ca7e64e$var$fieldCells.forEach((cell, index)=>{\n        const row = Math.floor(index / 4);\n        const col = index % 4;\n        const value = grid[row][col];\n        cell.textContent = value === 0 ? \"\" : value;\n        cell.className = `field-cell ${value ? `field-cell--${value}` : \"\"}`;\n    });\n    $09e991522ca7e64e$var$scoreElement.textContent = $09e991522ca7e64e$var$game.getScore();\n}\n// eslint-disable-next-line no-shadow\nfunction $09e991522ca7e64e$var$handleKeyPress(event) {\n    if ($09e991522ca7e64e$var$game.getStatus() !== \"playing\") return;\n    switch(event.key){\n        case $09e991522ca7e64e$var$KEY_LEFT:\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case $09e991522ca7e64e$var$KEY_RIGHT:\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n        case $09e991522ca7e64e$var$KEY_UP:\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case $09e991522ca7e64e$var$KEY_DOWN:\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $09e991522ca7e64e$var$renderGrid();\n    $09e991522ca7e64e$var$checkGameStatus();\n}\nfunction $09e991522ca7e64e$var$checkGameStatus() {\n    if ($09e991522ca7e64e$var$game.getStatus() === \"win\") $09e991522ca7e64e$var$messageWin.classList.remove(\"hidden\");\n    else if ($09e991522ca7e64e$var$game.getStatus() === \"lose\") $09e991522ca7e64e$var$messageLose.classList.remove(\"hidden\");\n}\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$startButton.classList.contains(\"start\")) {\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$startButton.classList.remove(\"start\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"restart\");\n        $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n        $09e991522ca7e64e$var$messageStart.classList.add(\"hidden\");\n    } else {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$startButton.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"start\");\n        $09e991522ca7e64e$var$startButton.textContent = \"Start\";\n        $09e991522ca7e64e$var$messageWin.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$messageLose.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$messageStart.classList.remove(\"hidden\");\n    }\n    $09e991522ca7e64e$var$renderGrid();\n});\ndocument.addEventListener(\"keydown\", $09e991522ca7e64e$var$handleKeyPress);\n\n\n//# sourceMappingURL=index.cf4f6e48.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\n\nconst game = new Game();\nconst startButton = document.querySelector('.button');\nconst scoreElement = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst fieldCells = document.querySelectorAll('.field-cell');\n\nconst KEY_LEFT = 'ArrowLeft';\nconst KEY_RIGHT = 'ArrowRight';\nconst KEY_UP = 'ArrowUp';\nconst KEY_DOWN = 'ArrowDown';\n\nfunction renderGrid() {\n  const grid = game.getState();\n\n  fieldCells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = grid[row][col];\n\n    cell.textContent = value === 0 ? '' : value;\n    cell.className = `field-cell ${value ? `field-cell--${value}` : ''}`;\n  });\n  scoreElement.textContent = game.getScore();\n}\n\n// eslint-disable-next-line no-shadow\nfunction handleKeyPress(event) {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (event.key) {\n    case KEY_LEFT:\n      game.moveLeft();\n      break;\n    case KEY_RIGHT:\n      game.moveRight();\n      break;\n    case KEY_UP:\n      game.moveUp();\n      break;\n    case KEY_DOWN:\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  renderGrid();\n  checkGameStatus();\n}\n\nfunction checkGameStatus() {\n  if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    game.start();\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n    messageStart.classList.add('hidden');\n  } else {\n    game.restart();\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    startButton.textContent = 'Start';\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n  }\n  renderGrid();\n});\n\ndocument.addEventListener('keydown', handleKeyPress);\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState.map((row) => [...row]);\n    this.grid = initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const prevState = JSON.stringify(this.grid);\n\n    this.grid = this.grid.map((row) => this._slideAndMerge(row));\n    this._postMoveHandler(prevState);\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const prevState = JSON.stringify(this.grid);\n\n    this.grid = this.grid.map((row) => this._slideRight(row));\n\n    this.grid = this.grid.map((row) => this._mergeRight(row));\n\n    this._postMoveHandler(prevState);\n  }\n\n  _slideRight(row) {\n    const filtered = row.filter((cell) => cell !== 0);\n    const merged = new Array(4).fill(0);\n\n    let emptyIndex = 3;\n\n    for (let i = filtered.length - 1; i >= 0; i--) {\n      merged[emptyIndex--] = filtered[i];\n    }\n\n    return merged;\n  }\n\n  _mergeRight(row) {\n    const merged = row.slice();\n\n    for (let i = 3; i > 0; i--) {\n      if (merged[i] === merged[i - 1] && merged[i] !== 0) {\n        merged[i] *= 2;\n        this.score += merged[i];\n        merged[i - 1] = 0;\n      }\n    }\n\n    return this._slideRight(merged);\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const prevState = JSON.stringify(this.grid);\n\n    this._transposeGrid();\n    this.grid = this.grid.map((row) => this._slideAndMerge(row));\n    this._transposeGrid();\n    this._postMoveHandler(prevState);\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const prevState = JSON.stringify(this.grid);\n\n    this._transposeGrid();\n\n    this.grid = this.grid.map(\n      (row) => this._slideAndMerge(row.reverse()).reverse(),\n      // eslint-disable-next-line function-paren-newline\n    );\n    this._transposeGrid();\n    this._postMoveHandler(prevState);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.grid;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status !== 'idle') {\n      return;\n    }\n\n    this.status = 'playing';\n    this._addRandomCell();\n    this._addRandomCell();\n  }\n\n  restart() {\n    this.score = 0;\n    this.grid = this.initialState.map((row) => [...row]);\n    this.status = 'idle';\n  }\n\n  _slideAndMerge(row) {\n    const filtered = row.filter((cell) => cell !== 0);\n    const merged = [];\n\n    let skipNext = false;\n\n    for (let i = 0; i < filtered.length; i++) {\n      if (skipNext) {\n        skipNext = false;\n        continue;\n      }\n\n      if (filtered[i] === filtered[i + 1]) {\n        merged.push(filtered[i] * 2);\n        this.score += filtered[i] * 2;\n        skipNext = true;\n      } else {\n        merged.push(filtered[i]);\n      }\n    }\n\n    while (merged.length < 4) {\n      merged.push(0);\n    }\n\n    return merged;\n  }\n\n  _transposeGrid() {\n    this.grid = this.grid[0].map(\n      (_, colIndex) => this.grid.map((row) => row[colIndex]),\n      // eslint-disable-next-line function-paren-newline\n    );\n  }\n\n  _addRandomCell() {\n    const emptyCells = [];\n\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        if (this.grid[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCells.length);\n      const { row, col } = emptyCells[randomIndex];\n\n      this.grid[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  _postMoveHandler(prevState) {\n    if (JSON.stringify(this.grid) !== prevState) {\n      this._addRandomCell();\n\n      if (this._checkWin()) {\n        this.status = 'win';\n      } else if (!this._hasAvailableMoves()) {\n        this.status = 'lose';\n      }\n    }\n  }\n\n  _checkWin() {\n    return this.grid.some((row) => row.some((cell) => cell === 2048));\n  }\n\n  _hasAvailableMoves() {\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (this.grid[r][c] === 0) {\n          return true;\n        }\n\n        if (c < 3 && this.grid[r][c] === this.grid[r][c + 1]) {\n          return true;\n        }\n\n        if (r < 3 && this.grid[r][c] === this.grid[r + 1][c]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$game","constructor","initialState","map","row","grid","score","status","moveLeft","prevState","JSON","stringify","_slideAndMerge","_postMoveHandler","moveRight","_slideRight","_mergeRight","filtered","filter","cell","merged","fill","emptyIndex","i","length","slice","moveUp","_transposeGrid","moveDown","reverse","getScore","getState","getStatus","start","_addRandomCell","restart","skipNext","push","_","colIndex","emptyCells","col","randomIndex","Math","floor","random","_checkWin","_hasAvailableMoves","some","r","c","$09e991522ca7e64e$var$startButton","document","querySelector","$09e991522ca7e64e$var$scoreElement","$09e991522ca7e64e$var$messageStart","$09e991522ca7e64e$var$messageWin","$09e991522ca7e64e$var$messageLose","$09e991522ca7e64e$var$fieldCells","querySelectorAll","$09e991522ca7e64e$var$renderGrid","forEach","index","value","textContent","className","addEventListener","classList","contains","remove","add","event","key"],"version":3,"file":"index.cf4f6e48.js.map"}